// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SosCivil.Api.Data.Contexts;

#nullable disable

namespace SosCivil.Api.Migrations
{
    [DbContext(typeof(MainContext))]
    [Migration("20231201231549_RemovedStockField")]
    partial class RemovedStockField
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SosCivil.Api.Data.Entities.Cobrade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int>("CobradeCode")
                        .HasMaxLength(5)
                        .HasColumnType("integer");

                    b.Property<string>("CobradeType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Cobrades", (string)null);
                });

            modelBuilder.Entity("SosCivil.Api.Data.Entities.Establishment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(100)");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Establishments", (string)null);
                });

            modelBuilder.Entity("SosCivil.Api.Data.Entities.Item", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalQuantityWithUnity")
                        .HasColumnType("numeric");

                    b.Property<int>("UnityOfMeasurement")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Items", (string)null);
                });

            modelBuilder.Entity("SosCivil.Api.Data.Entities.Occurrence", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("EstablishmentId")
                        .HasColumnType("bigint");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EstablishmentId");

                    b.HasIndex("PersonId");

                    b.HasIndex("UserId");

                    b.ToTable("Occurences", (string)null);
                });

            modelBuilder.Entity("SosCivil.Api.Data.Entities.Person", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Cellphone")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("PersonType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Persons", (string)null);
                });

            modelBuilder.Entity("SosCivil.Api.Data.Entities.Request", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("OccurrenceId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("OccurrenceId");

                    b.ToTable("Requests", (string)null);
                });

            modelBuilder.Entity("SosCivil.Api.Data.Entities.RequestItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<long>("RequestId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("RequestId");

                    b.ToTable("RequestItems", (string)null);
                });

            modelBuilder.Entity("SosCivil.Api.Data.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<long>("PersonId")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("SosCivil.Api.Data.Entities.Establishment", b =>
                {
                    b.HasOne("SosCivil.Api.Data.Entities.Person", "Person")
                        .WithMany("Establishments")
                        .HasForeignKey("PersonId")
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("SosCivil.Api.Data.Entities.Occurrence", b =>
                {
                    b.HasOne("SosCivil.Api.Data.Entities.Establishment", "Establishment")
                        .WithMany("Occurrences")
                        .HasForeignKey("EstablishmentId")
                        .IsRequired();

                    b.HasOne("SosCivil.Api.Data.Entities.Person", "Person")
                        .WithMany("Occurrences")
                        .HasForeignKey("PersonId")
                        .IsRequired();

                    b.HasOne("SosCivil.Api.Data.Entities.User", "User")
                        .WithMany("Occurrences")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("Establishment");

                    b.Navigation("Person");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SosCivil.Api.Data.Entities.Request", b =>
                {
                    b.HasOne("SosCivil.Api.Data.Entities.Occurrence", "Occurrence")
                        .WithMany()
                        .HasForeignKey("OccurrenceId")
                        .IsRequired();

                    b.Navigation("Occurrence");
                });

            modelBuilder.Entity("SosCivil.Api.Data.Entities.RequestItem", b =>
                {
                    b.HasOne("SosCivil.Api.Data.Entities.Item", "Item")
                        .WithMany("RequestItems")
                        .HasForeignKey("ItemId")
                        .IsRequired();

                    b.HasOne("SosCivil.Api.Data.Entities.Request", "Request")
                        .WithMany("RequestItems")
                        .HasForeignKey("RequestId")
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("SosCivil.Api.Data.Entities.User", b =>
                {
                    b.HasOne("SosCivil.Api.Data.Entities.Person", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .IsRequired();

                    b.Navigation("Person");
                });

            modelBuilder.Entity("SosCivil.Api.Data.Entities.Establishment", b =>
                {
                    b.Navigation("Occurrences");
                });

            modelBuilder.Entity("SosCivil.Api.Data.Entities.Item", b =>
                {
                    b.Navigation("RequestItems");
                });

            modelBuilder.Entity("SosCivil.Api.Data.Entities.Person", b =>
                {
                    b.Navigation("Establishments");

                    b.Navigation("Occurrences");
                });

            modelBuilder.Entity("SosCivil.Api.Data.Entities.Request", b =>
                {
                    b.Navigation("RequestItems");
                });

            modelBuilder.Entity("SosCivil.Api.Data.Entities.User", b =>
                {
                    b.Navigation("Occurrences");
                });
#pragma warning restore 612, 618
        }
    }
}
